@inherits System.Web.Mvc.WebViewPage<Solita.LanguageEditor.UI.Models.LanguageEditorViewModel>

@using System.Globalization
@using System.Web.Mvc.Html
@using EPiServer.Framework.Web.Resources
@using EPiServer.Shell.Navigation
@using EPiServer.Shell.Web.Mvc.Html
@using Solita.LanguageEditor.UI.Common


<!DOCTYPE html>

<html>
    <head>
        <title>@Html.Translate("/languageeditor/title")</title>
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
       
        <!-- Shell -->
        @Html.Raw(ClientResources.RenderResources("ShellCore"))
        @Html.Raw(ClientResources.RenderResources("ShellWidgets"))
        <!-- LightTheme -->
        @Html.Raw(ClientResources.RenderResources("ShellCoreLightTheme"))
        <!-- Navigation -->
        @Html.Raw(ClientResources.RenderResources("Navigation"))
        <!-- Dojo Dashboard -->
        @Html.Raw(ClientResources.RenderResources("DojoDashboardCompatibility"))
        
        <style type="text/css">

            .language-editor td {
                padding: 0 5px;
            }
            .language-editor {
                margin: 10px;
            }
            .language-editor .category {
                padding-top: 1em;
            }
            .language-editor th {
                text-align: center;
            }
            .language-editor table {
                margin-bottom: 2em;
            }
            .language-editor .value-modified {
                background-color: lightgoldenrodyellow;
            }
        </style>
    </head>

    <body>
        <div id="epi-globalDocument">
            @Html.Raw(Html.GlobalMenu())

            <div class="language-editor">

                @using(Html.BeginForm(new { Action = "Save"})) {

                    <table>
                        <tr>
                            <th></th>
                            <th></th>
                            @foreach(var lang in Model.Languages)
                            {
                                <th data-key="@lang">
                                    @CultureInfo.GetCultureInfo(lang).DisplayName
                                    @if (Model.DevelopmentMode)
                                    {
                                        <input type="image" src="@ModuleUtil.PathTo("/static/img/arrow_down.png")" class="defaults-column"    
                                               title="@Html.Translate("/languageeditor/setcolumndefaults")" 
                                               alt="@Html.Translate("/languageeditor/setcolumndefaults")" />
                                    }
                                </th>
                            }
                        </tr>
        
                        @for (var iCat = 0; iCat < Model.Categories.Count(); iCat++)
                        {
                            <tr><td class="category"><strong>@Model.Categories[iCat].Name</strong></td></tr>

                            for (var iTrans = 0; iTrans < Model.Categories[iCat].Translations.Count(); iTrans++)
                            {
                                <tr data-default="@Model.Categories[iCat].Translations[iTrans].DefaultValue" class="translations-row">
                                    <td>
                                        @Html.HiddenFor(m => m.Categories[iCat].Translations[iTrans].Key)
                                        @Html.HiddenFor(m => m.Categories[iCat].Translations[iTrans].Description)
                                        @Model.Categories[iCat].Translations[iTrans].Description
                                    </td>
                
                                    <td>
                                        @if (Model.DevelopmentMode)
                                        {
                                            <input type="image" src="@ModuleUtil.PathTo("/static/img/arrow_right.png")" class="defaults-row"
                                                   title="@Html.Translate("/languageeditor/setrowdefaults")" 
                                                   alt="@Html.Translate("/languageeditor/setrowdefaults")" />
                                        }
                                    </td>
                
                                    @foreach (var lang in Model.Languages)
                                    {
                                        <td data-key="@lang">
                                            @Html.TextBoxFor(m => m.Categories[iCat].Translations[iTrans].Translations[lang], new {@class = "translation-input", data_original = Model.Categories[iCat].Translations[iTrans].Translations[lang]})
                                            <input type="image" src="@ModuleUtil.PathTo("/static/img/arrow_undo.png")"
                                                   title="@Html.Translate("/languageeditor/undo")"
                                                   alt="@Html.Translate("/languageeditor/undo")"
                                                   class="undo-cell"  />
                                            @if (Model.DevelopmentMode)
                                            {
                                                <input type="image" src="@ModuleUtil.PathTo("/static/img/arrow_in.png")" class="defaults-cell" 
                                                       title="@Html.Translate("/languageeditor/setdefault")"  
                                                       alt="@Html.Translate("/languageeditor/setdefault")" />
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                        }
        
                    </table>
    
                    <input type="submit" value="@Html.Translate("/languageeditor/undoall")" class="undo-all" />
                    <input type="submit" value="@Html.Translate("/languageeditor/save")" />
                }

            </div>
        </div>

        <script type="text/javascript">

            $(document).ready(function () {
                $(".undo-cell").click(function () {
                    var translationInput = $(this).siblings(".translation-input")[0];
                    SetOriginalValue(translationInput);

                    return false;
                });
                
                $(".undo-all").click(function () {
                    $(".translation-input").each(function() {
                        SetOriginalValue($(this));
                    });

                    return false;
                });
                
                $(".defaults-cell").click(function () {
                    var translationInput = $(this).siblings(".translation-input")[0];
                    SetDefaultValue(translationInput);

                    return false;
                });

                $(".defaults-column").click(function () {
                    var key = $(this).parent().data("key");
                    $("td[data-key='" + key + "']").find(".translation-input").each(function() {
                        SetDefaultValue($(this));
                    });
                    
                    return false;
                });

                $(".defaults-row").click(function () {
                    $(this).closest(".translations-row").find(".translation-input").each(function () {
                        SetDefaultValue($(this));
                    });

                    return false;
                });

                $(".translation-input").change(function() {
                    SetModifiedStatus($(this));
                });
            });

            function SetOriginalValue(translationInput) {
                $(translationInput).val(GetOriginalValue(translationInput));
                $(translationInput).change();
            }
            
            function GetOriginalValue(translationInput) {
                return $(translationInput).data("original");
            }
            
            function SetDefaultValue(translationInput) {
                $(translationInput).val(GetDefaultValue(translationInput));
                $(translationInput).change();
            }
            
            function GetDefaultValue(translationInput) {
                return $(translationInput).closest(".translations-row").data("default");
            }

            function SetModifiedStatus(translationInput) {
                translationInput.removeClass("value-modified");
                if (translationInput.val() !== GetOriginalValue(translationInput)) {
                    translationInput.addClass("value-modified");
                }
            }
        </script>

    </body>
</html>